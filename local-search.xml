<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>算法OJ练习Ⅰ</title>
    <link href="/2021/09/09/%E7%AE%97%E6%B3%95OJ%E7%BB%83%E4%B9%A0%E2%85%A0/"/>
    <url>/2021/09/09/%E7%AE%97%E6%B3%95OJ%E7%BB%83%E4%B9%A0%E2%85%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="问题-A-小雏鸟的成人式-2"><a href="#问题-A-小雏鸟的成人式-2" class="headerlink" title="问题 A: 小雏鸟的成人式 2"></a>问题 A: 小雏鸟的成人式 2</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>陶行知先生说：“我们要活的书，不要死的书 ”。</p><p>小雏鸟们从书上都是对的到现在能去伪存真的去使用书籍，证明你们长大了。总之就是要有自己的主见，自己的思考。</p><p>大白希望大家都能拿到一百分，所以对100这个数以及他的倍数很喜欢。</p><p>大白发现，从1开始，一定能找出一个序列从小到大排列，使得每一项都是 <strong>恰好能且仅能</strong> 被100整除D次。</p><p>请你编写程序，找到这个数列里第N个数。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>多行。每行输入两个整数，表示D和N，N范围[1,100]，D范围[0,2]</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>每行对应输入，给出一个符合题意的整数</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">5</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">11</span><br><span class="hljs-symbol">2 </span><span class="hljs-number">85</span><br></code></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">5</span><br><span class="hljs-number">1100</span><br><span class="hljs-number">850000</span><br></code></pre></td></tr></table></figure><h2 id="思路及代码"><a href="#思路及代码" class="headerlink" title="思路及代码"></a>思路及代码</h2><p>这道题的关键之处在于那个恰好且仅能被100整除D次出，这样的话当D取0时第一百个数就不是100了，因为100时能被D取1时能整除一次的第一个数，所以当D取0时的第一百个数就变成了101，所以没到第100个数的时候会有一个跳变，可以先加个判断，若其是第一百个数就先给它加个1；这样就不会出现错误的情况。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> D,N;<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(cin &gt;&gt; D &gt;&gt; N)<br>    &#123;   <br>        <span class="hljs-keyword">if</span>(N == <span class="hljs-number">100</span>)<br>            N ++ ;<br>        <span class="hljs-keyword">if</span>(D == <span class="hljs-number">1</span>)<br>            N *= <span class="hljs-number">100</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(D == <span class="hljs-number">2</span>)<br>            N *= <span class="hljs-number">10000</span>;<br>        cout &lt;&lt; N &lt;&lt; endl;<br>    &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="问题-B-小雏鸟的成人式-3"><a href="#问题-B-小雏鸟的成人式-3" class="headerlink" title="问题 B: 小雏鸟的成人式 3"></a>问题 B: 小雏鸟的成人式 3</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>陶行知先生说：“因为道德是做人的根本。根本一坏，纵然使你有一些学问和本领，也无甚用处。”</p><p>小雏鸟们需要时刻铭记在心，不管你长成什么样的的攻城狮，都必须三观正确。</p><p>涛涛轰这一天带着爱美酱来到了一个风景如画的地方游玩。艳阳高照，他俩玩的很尽兴，但是现在他们口渴了。</p><p>涛涛轰：“我要买饮料！”</p><p>店主：“我们这里有三种饮料，矿泉水1.5元一瓶，可乐2元一瓶，橙汁3.5元一瓶。”</p><p>涛涛轰：“好的，给我一瓶矿泉水。”</p><p>说完他掏出一张N元的大钞递给店主。</p><p>店主：“我忘了提醒你了，我们这里没有找客人钱的习惯的，多的钱我们都当小费收了的，嘿嘿。”</p><p>涛涛轰：“……”</p><p>涛涛轰环顾四周，就这一家商店，况且实在太渴了，看着脸热的粉扑扑的一头汗的爱美酱，就决定在这买了。不过涛涛轰想，与其把钱当小费送给他还不如自己多买一点饮料，反正早晚都要喝，但是要尽量少让他赚小费。</p><p>现在涛涛轰希望你能帮他计算一下，最少他要给店主多少小费。</p><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>输入数据的第一行是一个整数T(1&lt;=T&lt;=100)，代表测试数据的数量。然后是T行测试数据，每个测试数据只包含一个正整数N（1&lt;=N&lt;=10000），N代表小明手中钞票的面值，以分为单位。<br>注意：商店里只有题中描述的三种饮料。</p><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>对于每组测试数据，请你输出小明最少要浪费多少钱给店主作为小费，以分为单位。</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">2<br>900<br>250<br></code></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">0<br>50<br></code></pre></td></tr></table></figure><h2 id="代码及思路"><a href="#代码及思路" class="headerlink" title="代码及思路"></a>代码及思路</h2><p>首先题目中的橙汁价格=可乐价格＋矿泉水价格 ，所以我们可以不用考虑购买橙汁，可以去考虑购买可乐或者矿泉水因为可乐和矿泉水的价格只相差50分，可以转换成全部购买矿泉水，然后判断剩下的钱是否大于或者等于50分，满足，则可用矿泉水加上50分去换一瓶可乐，这样可以喝到最多的水。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> T,n;<br><span class="hljs-keyword">int</span> x,y;<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span>(T --)<br>    &#123;   <br>        cin &gt;&gt; n;<br>        x = n % <span class="hljs-number">150</span>;<br>        y = n / <span class="hljs-number">150</span>;<br>        <span class="hljs-keyword">while</span>(x &gt;= <span class="hljs-number">50</span> &amp;&amp; y &gt; <span class="hljs-number">0</span>) &#123;<br>            x -= <span class="hljs-number">50</span>;<br>            y -- ;<br>        &#125;<br>        cout &lt;&lt; x &lt;&lt; endl;<br>    &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法OJ</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法OJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微机原理实验</title>
    <link href="/2021/09/08/first/"/>
    <url>/2021/09/08/first/</url>
    
    <content type="html"><![CDATA[<h1 id="8255芯片＋8254芯片实现硬延时跑马灯"><a href="#8255芯片＋8254芯片实现硬延时跑马灯" class="headerlink" title="8255芯片＋8254芯片实现硬延时跑马灯"></a>8255芯片＋8254芯片实现硬延时跑马灯</h1><p><strong>仅供参考</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs xml">；此案例中8255的四个端口地址依次为 280H 281H 282H 283H<br>; 8254的依次为 298H 299H 29AH 29BH <br>；8255接Y0 8254接Y3<br>；此程序实现目标，通过开关D0来启动或终止跑马灯，每个灯亮延时2s<br>；这里是用8255的A口来输入8254处理过的脉冲信号，B口输出，C口输入开关状态<br>CODE SEGMENT<br>       ASSUME CS:CODE<br><br>START: <br>       MOV DX,283H<br>       MOV AL,10011001B <br>       OUT DX,AL；向8255写入控制字<br>       <br>-- 初始化8254 使其达到一个2s的延时效果---这里使用了一个级联的方式，使用了1号通道和2号通道级联；<br>       MOV AL,01110101B    ；写入8254 1号通道的控制字<br>       MOV DX,29BH<br>       OUT DX,AL<br>       MOV AL,00H<br>       MOV DX,299H                                      <br>       OUT DX,AL<br>       MOV AL,10H<br>       OUT DX,AL <br>                 <br>       MOV AL,10110111B ；写入8254 2号通道的控制字<br>       MOV DX,29BH<br>       OUT DX,AL<br>       MOV AL,00H<br>       MOV DX,29AH<br>       OUT DX,AL<br>       MOV AL,40H<br>       OUT DX,AL ；初始化结束<br><br>       MOV BL,04H；设定初值，暂存于BL中<br>；读入开关状态，是否是D0接入<br>T1:<br>    MOV DX,282H<br>    IN  AL,DX<br>    TEST AL,01H ；00000001B<br>    JZ T1<br>；读8254输出电平的状态，若为低电平则继续循环，等待高电平到来<br>T2:<br>   MOV DX,280H<br>   IN  AL,DX<br>   TEST AL,01H<br>   JZ T2<br>；前面都准备就绪，开始让第三个灯亮<br>   MOV DX,281H<br>   MOV AL,BL<br>   OUT DX,AL<br> T4:<br>；测试此时是否为高电平，<br>   MOV DX,280H<br>   IN  AL,DX<br>   TEST AL,01H<br>   JNZ T4 <br>；当此刻为高电平，则完成了延时过程，实现了延时2s<br> ；循环左移一位<br>    ROL BL,1<br>    JMP T1  <br><br>CODE ENDS<br>END START<br></code></pre></td></tr></table></figure><p><strong>课程实验总结，仅供参考。</strong></p>]]></content>
    
    
    <categories>
      
      <category>微机原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微机原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
